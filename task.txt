Sentence from words via API


Task:

The system will be a simple webapp exposing REST API acting as a
generator of the sentences from the words inserted to it by rules
described below. You can input any word to the system but you need
to specify its part of speech - NOUN or VERB or
OBJECTIVE.



The system must be able to generate a sentence from the words
according the rule that sentence is in the form of NOUN VERB
ADJECTIVE. Further description of
resources / functionality is available in the next part - API
proposal.



We suggest you use Spring Boot or Dropwizard but it’s not
mandatory.


No persistence is needed -  persistent storage is only a
bonus.



We also suggest to use JSON format for API and library
https://github.com/lukas-krecan/JsonUnit
in unit tests and
https://github.com/jadler-mocking/jadler
for integration tests.



If you find any nonsense in the task description or have a problem
with bootstrapping the project in Spring Boot or Dropwizard feel
free to ask us at
jiri.sitina@gooddata.com
or
martin.tosovsky@gooddata.com.



Possible solution/API proposal:

Resources:



GET /words


list all words added



PUT /words/{word}


payload:


{


“word“:


{


“wordCategory“: “NOUN/VERB/OBJECTIVE”


}


}



GET /words/{word}


payload:


{


“word“:


{


“word“: “fooWord”


“wordCategory“: “NOUN/VERB/OBJECTIVE” // should be enum


}


}


optional - get list of forbidden words from file and reject them on
API



GET /sentences


list all generated sentences



POST /sentences/generate (call without request body)


generate new sentence with unique id (accessible by GET
/sentences/{sentenceID})


add date + time when the sentence was generated


optional 1. - number of views of the single sentence


on resource /sentences/{sentenceID}  you can see number of
view of the specific sentence


optional 2. (Advanced) Track number and id of exactly the same
generated sentences (separate resource - introduce one)


sentence should be random String in form of NOUN VERB ADJECTIVE only from words added to
system


if there is no all necessary types of words system should return
error



GET /sentences/{sentenceID}


payload:


{


“sentence“: {


“text“: “fooWord is nice“,


“showDisplayCount“: 1 //optional


}


}



GET /sentences/{sentenceID}/yodaTalk


return special form of the requested sentence (ADJECTIVE NOUN VERB)


payload:


{


“sentence“: {


“text“: “fooWord nice is“,


}


}